
ユーザーを追加

# useradd 管理ユーザー名
# passwd 管理ユーザー名
(パスワードを入力)

管理ユーザーでログイン



ルートのパスワード変更

# su
(ルートのパスワード入力)

ルートでSSHログインを禁止

# vi /etc/ssh/sshd_config

-#PermitRootLogin yes
+PermitRootLogin no

# sshd -t
(何も表示されないことを確認する)

# service sshd restart


sudoersに登録

# su
# visudo

↓この行の下に追加
# Allow members of group sudo to execute any command




Apache インストール
https://blog.apar.jp/linux/6476/
http://qiita.com/shadowhat/items/163ee5fdd56c51100e9e

# yum install gcc gcc-c++ pcre-devel openssl-devel wget autoconf cmake zlib-devel git libev-devel python libev-devel c-ares-devel 
# yum groupinstall development

# cd /usr/local/src/


wget https://www.openssl.org/source/openssl-1.0.2k.tar.gz
tar xvzf openssl-1.0.2k.tar.gz
cd openssl-1.0.2k/
./config --prefix=/usr/local/openssl shared zlib
make depend
make
make test
make install


cd /usr/local/src/
wget https://github.com/nghttp2/nghttp2/releases/download/v1.22.0/nghttp2-1.22.0.tar.gz

tar xvzf nghttp2-1.22.0.tar.gz
cd nghttp2-1.22.0/
env OPENSSL_CFLAGS="-I/usr/local/openssl/include" OPENSSL_LIBS="-L/usr/local/openssl/lib -lssl -lcrypto" ./configure -enable-app
make
make install 

echo /usr/local/lib > /etc/ld.so.conf.d/usr-local-lib.conf
ldconfig


cd /usr/local/src/
wget http://ftp.jaist.ac.jp/pub/apache//apr/apr-1.5.2.tar.gz
tar xvzf apr-1.5.2.tar.gz
cd apr-1.5.2/
./configure
make
make install


cd /usr/local/src/
wget http://ftp.jaist.ac.jp/pub/apache//apr/apr-util-1.5.4.tar.gz
tar xvzf apr-util-1.5.4.tar.gz
cd apr-util-1.5.4/
./configure --with-apr=/usr/local/apr
make
make install




cd /usr/local/src/
wget http://ftp.riken.jp/net/apache//httpd/httpd-2.4.25.tar.gz
tar xvzf httpd-2.4.25.tar.gz
cd httpd-2.4.25/
./configure \
--enable-http2 \
--enable-ssl \
--with-ssl=/usr/local/openssl-1.0.2k \
--enable-so \
--enable-rewrite \
--enable-mods-shared=all \
--enable-mpms-shared=all \
--with-mpm=prefork

make
make install 

groupadd apache
useradd -g apache apache
usermod -aG apache 管理ユーザー名




yum install systemd-devel

cd /usr/local/src/httpd-2.4.25/modules/arch/unix
wget https://raw.githubusercontent.com/apache/httpd/trunk/modules/arch/unix/mod_systemd.c

#aspxを使ってコンパイル
/usr/local/apache2/bin/apxs -c mod_systemd.c -I /usr/include/systemd/sd-daemon.h

#libtoolにおまじない
libtool \
--silent \
--mode=compile gcc -std=gnu99 -prefer-pic -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong \
--param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -D_LARGEFILE64_SOURCE  -DLINUX -D_REENTRANT -D_GNU_SOURCE -pthread -I/usr/local/apache2/include  -I/usr/local/apache2/include   -I/usr/local/apache2/include -I/usr/local/apr/include/apr-1  -c -o mod_systemd.lo mod_systemd.c && touch mod_systemd.slo

libtool \
--silent \
--mode=link gcc -std=gnu99 -Wl,-z,relro,-z,now,-L/usr/lib64   -o mod_systemd.la  -rpath /usr/local/apache2/modules -module -avoid-version    mod_systemd.lo


libtool \
--silent \
--mode=link gcc -std=gnu99 -Wl,-z,relro,-z,now,-L/usr/lib64   -o mod_systemd.la  -rpath /usr/local/apache2/modules -module -avoid-version    mod_systemd.lo -lsystemd-daemon

#モジュールを登録
/usr/local/apache2/bin/apxs -i -a -n systemd mod_systemd.la

vi /usr/lib/systemd/system/httpd.service
[Unit]
Description=The Apache HTTP Server
After=network.target remote-fs.target nss-lookup.target
Documentation=man:httpd(8)
Documentation=man:apachectl(8)

[Service]
Type=notify
#EnvironmentFile=/usr/local/apache2/conf/httpd.conf
ExecStart=/usr/local/apache2/bin/httpd $OPTIONS -DFOREGROUND
ExecReload=/usr/local/bin/httpd $OPTIONS -k graceful
ExecStop=/bin/kill -WINCH ${MAINPID}
# We want systemd to give httpd some time to finish gracefully, but still want
# it to kill httpd after TimeoutStopSec if something went wrong during the
# graceful stop. Normally, Systemd sends SIGTERM signal right after the
# ExecStop, which would kill httpd. We are sending useless SIGCONT here to give
# httpd time to finish.
KillSignal=SIGCONT
PrivateTmp=true

[Install]
WantedBy=multi-user.target



systemctl daemon-reload
systemctl start httpd
systemctl enable httpd

firewall-cmd --zone=public --add-service=http --permanent
firewall-cmd --zone=public --add-service=https --permanent



MariaDB
http://qiita.com/shadowhat/items/163ee5fdd56c51100e9e


groupadd mysql
useradd -g mysql -d /bin/false mysql

yum install gcc* make cmake ncurses-devel bison libxml2-devel pcre-devel openssl-devel



cd /usr/local/src
wget --trust-server-names https://downloads.mariadb.org/interstitial/mariadb-10.1.23/source/mariadb-10.1.23.tar.gz/from/http%3A//ftp.yz.yamagata-u.ac.jp/pub/dbms/mariadb/
tar xvzf mariadb-10.1.23.tar.gz
cd mariadb-10.1.23
BUILD/autorun.sh

export OPENSSL_ROOT_DIR=/usr/local/openssl
export OPENSSL_INCLUDE_DIR=/usr/local/openssl/include
export OPENSSL_LIBRARIES=/usr/local/openssl/lib/

cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=/var/lib/mysql -DDEFAULT_CHARSET=utf8 -DWITH_EXTRA_CHARSETS=all -DDEFAULT_COLLATION=utf8_general_ci -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_PARTITION_STORAGE_ENGINE=1 -DWITH_PIC=1 -DWITHOUT_TOKUDB_STORAGE_ENGINE=ON
make
make install

cp /usr/local/mysql/support-files/my-huge.cnf /etc/my.cnf
mkdir /var/lib/mysql
chown mysql:mysql /var/lib/mysql
mkdir /var/log/mysql
chown -R mysql:mysql /var/log/mysql

/usr/local/mysql/scripts/mysql_install_db  --user=mysql --basedir=/usr/local/mysql --datadir=/var/lib/mysql

cp /usr/local/src/mariadb-10.1.23/support-files/mysql.server /etc/init.d/mysqld
chkconfig --add mysqld
chkconfig mysqld on
chkconfig --list mysqld


ln -s /usr/local/mysql/bin/* /usr/local/bin/
ldconfig
chmod +x /etc/init.d/mysqld
/etc/init.d/mysqld start

mysql_secure_installation
あとは表示に従って入力


mysql -u root -p
> GRANT ALL ON *.* TO DBユーザー名@"localhost"IDENTIFIED BY "パスワード";
> FLUSH PRIVILEGES;
> exit;




# yum install libpng-devel libjpeg-devel libxml2-devel libssh-devel libcurl-devel zlib-devel freetype-devel curl-devel


$ cd /usr/local/src

$ wget http://jp2.php.net/get/php-7.1.5.tar.gz/from/this/mirror -O php-7.1.5.tar.gz
$ tar zxvf php-7.1.5.tar.gz
$ cd php-7.1.5
$ ./configure --prefix=/usr/local/php --enable-mbstring --enable-mbregex --enable-bcmath --enable-exif --enable-sockets --with-apxs2=/usr/local/apache2/bin/apxs --with-mysqli --with-pdo-mysql --with-openssl --with-gd --with-jpeg-dir --with-png-dir --with-zlib-dir --with-freetype-dir --with-pear --with-zlib --with-curl


$ make
$ make test
$ make install

$ cp /usr/local/src/php-7.1.5/php.ini-development /usr/local/php/php.ini
$ ln -s /usr/local/php/bin/* /usr/local/bin/

$ vi /usr/local/apache2/conf/httpd.conf


-DirectoryIndex index.html
+DirectoryIndex index.html index.php

#一番下に以下も追加

PHPIniDir /usr/local/php
<FilesMatch \.php$>
    SetHandler application/x-httpd-php
</FilesMatch>


$ sudo vi /usr/local/php/php.ini

-upload_max_filesize = 2M
+upload_max_filesize = 8M

-;date.timezone =
+date.timezone = Asia/Tokyo