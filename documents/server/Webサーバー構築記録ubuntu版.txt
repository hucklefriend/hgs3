# sudo apt-get install openssh-server


○以下、VMware環境のみ

$ sudo apt-get install git
$ cd /usr/local/src
$ sudo git clone https://github.com/rasa/vmware-tools-patches.git
$ cd vmware-tools-patches
$ sudo ./patched-open-vm-tools.sh -d

VM wareのフォルダ共有設定をする

$ sudo ln -s /mnt/hgfs/hgs3 /var/hgs3


○ Apache

$ sudo apt-get install apache2


○ MariaDB

sudo apt-get install software-properties-common
sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8
sudo add-apt-repository 'deb [arch=amd64,i386] http://ftp.yz.yamagata-u.ac.jp/pub/dbms/mariadb/repo/10.2/ubuntu zesty main'
sudo apt update
sudo apt install mariadb-server

# mysql -u root


アプリ用ユーザー追加
-- 開発用
CREATE USER 'hgs'@'localhost' IDENTIFIED BY '';
CREATE DATABASE hgs3 CHARACTER SET utf8mb4;
CREATE DATABASE hgs2;
GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER, CREATE TEMPORARY TABLES, CREATE VIEW, EVENT, TRIGGER, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EXECUTE ON `hgs3`.* TO 'hgs'@'localhost';
GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER, CREATE TEMPORARY TABLES, CREATE VIEW, EVENT, TRIGGER, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, EXECUTE ON `hgs2`.* TO 'hgs'@'localhost';

-- 本番用
CREATE USER 'hgs'@'localhost' IDENTIFIED BY 'パスワード';
CREATE DATABASE hgs3 CHARACTER SET utf8mb4;
GRANT SELECT, INSERT, UPDATE, DELETE, EXECUTE ON `hgs3`.* TO 'hgs'@'localhost';

exit;

○ PHP
sudo apt-get install php php-cli php-common libapache2-mod-php php-mysql php-curl php-xml php-zip php-gd php-mbstring  php-bcmath php-mcrypt php-json


○ Memcached
sudo apt-get install memcached
sudo apt-get install php-memcached





○ Apacheコンフィグ

# sudo vi /etc/apache2/sites-available/hgn.conf
alias /hgn /var/hgs3/web/public
<Directory /var/hgs3/web/public>
    Options FollowSymLinks Indexes
    AllowOverride All
    Require all granted
</Directory>

# sudo a2ensite hgn.conf
# sudo a2enmod rewrite


○自前証明書

a2enmod ssl
a2ensite default-ssl
system ctl reload apache2

openssl genrsa -aes128 2048 > server.key
openssl rsa -in server.key -out server.key
openssl req -utf8 -new -key server.key -out server.csr
Country Name (2 letter code) [GB]:JP
State or Province Name (full name) [Berkshire]:Tokyo
Locality Name (eg, city) [Newbury]:(空白)
Organization Name (eg, company) [My Company Ltd]:HGS
Organizational Unit Name (eg, section) []:(空白)
Common Name (eg, your name or your server's hostname) []:hgs.com
Email Address []:Enter
Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:Enterキー
An optional company name []:Enterキー

openssl x509 -in server.csr -out server.crt -req -signkey server.key -days 3650
chmod 400 server.*

sudo mv ./server.crt /etc/ssl/certs/server.crt
sudo mv ./server.key /etc/ssl/private/server.key

sudo vi /etc/apache2/sites-available/default-ssl.conf

SSLCertificateFile /etc/ssl/certs/server.crt
SSLCertificateKeyFile /etc/ssl/private/server.key

sudo service apache2 restart


○ Laravel設定

cd (laravel設置パス)
chmod 777 -R storage
chmod 777 -R bootstrap/cache



php artisan key:generate
php artisan config:clear


○ phpMyAdmin(開発環境のみ)

# sudo apt install phpmyadmin
# sudo vi /etc/phpmyadmin/config.inc.php

$cfg['Servers'][$i]['AllowNoPassword'] = true;


○ アプリ設置
cd アプリのパス
# rm composer.lock
# php composer.phar install
# php artisan migrate
# php artisan versionup:database


○ MongoDB

https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/

sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6
echo "deb [ arch=amd64,arm64 ] http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list
sudo apt-get update
sudo apt-get install mongodb-org
sudo apt-get install php-dev
sudo apt-get install pkg-config libssl-dev libsslcommon2-dev
sudo apt-get install php-mongodb
sudo service mongod start
sudo service apache2 restart


sudo systemctl enable mongod.service



mongo hgs3
db.createCollection('game_timeline');
db.createCollection('site_timeline');
db.createCollection('follow_user_timeline');
db.createCollection('myself_timeline');
db.createCollection('user_action_timeline');
db.createCollection('site_footprint');


db.user_action_timeline.createIndex({user_id: 1, time: -1});


※データ削除
db.timeline.remove({});
db.user_action_timeline.remove({});
db.site_footprint.remove({});



○16.04からアップグレードできない場合の対処
After changing the setting in /etc/update-manager/releases-upgrades from lts to normal, you need to run sudo apt-get update.


○VPSの設定
mysqlのパスワードは管理用ユーザのパスワードと同じ

IPtables
sudo vi /etc/iptables/iptables.rules
sudo iptables-restore < /etc/iptables/iptables.rules

sudo vi /etc/apache2/envvars
実行ユーザーを変更

sudo vi /etc/apache2/conf-enabled/security.conf
ServerSignature Off

○Let's Encrypt
cd /opt
git clone https://github.com/letsencrypt/letsencrypt

systemctl stop apache2

./letsencrypt-auto certonly -a standalone -d horrorgame.net -d beta.horrorgame.net

ls /etc/letsencrypt/live/EXAMPLE.COM/

apacheのコンフィグ修正
#SSLCertificateFile     /etc/ssl/certs/ssl-cert-snakeoil.pem
#SSLCertificateKeyFile  /etc/ssl/private/ssl-cert-snakeoil.key
SSLCertificateFile      /etc/letsencrypt/live/EXAMPLE.COM/cert.pem
SSLCertificateKeyFile   /etc/letsencrypt/live/EXAMPLE.COM/privkey.pem
SSLCertificateChainFile /etc/letsencrypt/live/EXAMPLE.COM/chain.pem

systemctl start apache2



http://sig9.hatenablog.com/entry/2016/06/27/225403

lets encrypt の自動更新
https://qiita.com/takahiko/items/a08895550727b95b6c36


http://blog.net-hut.com/vps/544/


○TODO
ログのローテーション
Apache: http://logic.moo.jp/data/archives/312.html
        http://higherhope.net/?p=2539
        https://humo-life.net/blog/centos/187/
Laravel: https://blog.e2info.co.jp/2016/10/05/laravel_log_split/

鍵認証
https://runble1.com/ubuntu-config-ssh/
http://zorinos.seesaa.net/article/416007439.html

○調べればわかるけど、やったこと
httpにきたのをhttpsに（rewrite）
SSL強制(httpd.confにSSLRequireSSL)

apt-get install imagemagick
apt-get install libimage-magick-perl